-- Portfolio Knowledge Graph Population
-- Generated by kg-initial-analyzer
-- Date: 2025-10-22

-- ============================================================================
-- CORE APPLICATION ENTITIES
-- ============================================================================

-- Entry Point
INSERT INTO entities (id, type, name, data)
VALUES (
  'main-tsx',
  'UIComponent',
  'main',
  json('{"filePath": "src/main.tsx", "description": "React application entry point with StrictMode", "framework": "React 18", "renderMode": "client", "strict": true}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'app-tsx',
  'UIComponent',
  'App',
  json('{"filePath": "src/App.tsx", "description": "Root application component with routing and theme provider", "framework": "React Router", "features": ["routing", "theming"], "routes": ["/", "/docusearch", "/context-kit", "/kanban"]}')
);

-- ============================================================================
-- PROVIDER ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'theme-provider-tsx',
  'UIComponent',
  'ThemeProvider',
  json('{"filePath": "src/providers/ThemeProvider.tsx", "description": "Theme context provider for dark/light mode with system preference support", "pattern": "Context Provider", "features": ["dark mode", "light mode", "system preference"], "library": "next-themes"}')
);

-- ============================================================================
-- PAGE ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'home-page-tsx',
  'UIComponent',
  'Home',
  json('{"filePath": "src/pages/Home.tsx", "description": "Homepage with Hero, About, and FeaturedProjects sections", "pageType": "landing", "sections": ["Hero", "About", "FeaturedProjects"], "layout": "vertical"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'docusearch-page-tsx',
  'UIComponent',
  'Docusearch',
  json('{"filePath": "src/pages/Docusearch.tsx", "description": "DocuSearch case study page following Problem→Understanding→Solution→Impact pattern", "pageType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "docusearch"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'context-kit-page-tsx',
  'UIComponent',
  'ContextKit',
  json('{"filePath": "src/pages/ContextKit.tsx", "description": "tkr-context-kit case study page following Problem→Understanding→Solution→Impact pattern", "pageType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "context-kit"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'kanban-page-tsx',
  'UIComponent',
  'Kanban',
  json('{"filePath": "src/pages/Kanban.tsx", "description": "TaskBoardAI case study page following Problem→Understanding→Solution→Impact pattern", "pageType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "kanban"}')
);

-- ============================================================================
-- LAYOUT COMPONENT ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'header-tsx',
  'UIComponent',
  'Header',
  json('{"filePath": "src/components/layout/Header.tsx", "description": "Site navigation header with responsive mobile menu and theme toggle", "componentType": "layout", "features": ["responsive", "mobile-menu", "theme-toggle", "active-route-highlighting"], "routes": ["/", "/docusearch", "/context-kit", "/kanban"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'footer-tsx',
  'UIComponent',
  'Footer',
  json('{"filePath": "src/components/layout/Footer.tsx", "description": "Site footer component", "componentType": "layout"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'theme-toggle-tsx',
  'UIComponent',
  'ThemeToggle',
  json('{"filePath": "src/components/layout/ThemeToggle.tsx", "description": "Theme switcher control for dark/light/system modes", "componentType": "control", "modes": ["dark", "light", "system"], "library": "next-themes"}')
);

-- ============================================================================
-- SECTION COMPONENT ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'hero-tsx',
  'UIComponent',
  'Hero',
  json('{"filePath": "src/components/sections/Hero.tsx", "description": "Hero section with primary value proposition", "componentType": "section", "content": "value-proposition"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'about-tsx',
  'UIComponent',
  'About',
  json('{"filePath": "src/components/sections/About.tsx", "description": "About section with work history narrative", "componentType": "section", "content": "work-history", "datasource": "workHistory"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'featured-projects-tsx',
  'UIComponent',
  'FeaturedProjects',
  json('{"filePath": "src/components/sections/FeaturedProjects.tsx", "description": "Featured projects grid with hero layout for DocuSearch", "componentType": "section", "layout": "grid", "datasource": "projects", "features": ["hero-layout", "responsive-grid"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'project-card-tsx',
  'UIComponent',
  'ProjectCard',
  json('{"filePath": "src/components/sections/ProjectCard.tsx", "description": "Project card component with hero and standard variants", "componentType": "card", "variants": ["hero", "standard"], "features": ["responsive", "navigation"]}')
);

-- ============================================================================
-- CASE STUDY COMPONENT ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'case-study-layout-tsx',
  'UIComponent',
  'CaseStudyLayout',
  json('{"filePath": "src/components/case-studies/CaseStudyLayout.tsx", "description": "Layout component for case study pages implementing Problem→Understanding→Solution→Impact framework", "componentType": "layout", "pattern": "Problem→Understanding→Solution→Impact", "apis": ["content-prop", "children-prop"], "sections": ["ProblemSection", "UnderstandingSection", "SolutionSection", "ImpactSection", "ProjectMetadata"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'problem-section-tsx',
  'UIComponent',
  'ProblemSection',
  json('{"filePath": "src/components/case-studies/ProblemSection.tsx", "description": "Case study section for problem statement", "componentType": "section", "frameworkPhase": "Problem"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'understanding-section-tsx',
  'UIComponent',
  'UnderstandingSection',
  json('{"filePath": "src/components/case-studies/UnderstandingSection.tsx", "description": "Case study section for understanding and key insights", "componentType": "section", "frameworkPhase": "Understanding", "features": ["key-insights"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'solution-section-tsx',
  'UIComponent',
  'SolutionSection',
  json('{"filePath": "src/components/case-studies/SolutionSection.tsx", "description": "Case study section for solution description", "componentType": "section", "frameworkPhase": "Solution", "features": ["features-list"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'impact-section-tsx',
  'UIComponent',
  'ImpactSection',
  json('{"filePath": "src/components/case-studies/ImpactSection.tsx", "description": "Case study section for impact and metrics", "componentType": "section", "frameworkPhase": "Impact", "features": ["metrics"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'project-metadata-tsx',
  'UIComponent',
  'ProjectMetadata',
  json('{"filePath": "src/components/case-studies/ProjectMetadata.tsx", "description": "Case study metadata display component", "componentType": "metadata", "displays": ["role", "type", "stack", "skills", "year"]}')
);

-- ============================================================================
-- UI COMPONENT ENTITIES (Shadcn/ui)
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'button-tsx',
  'UIComponent',
  'Button',
  json('{"filePath": "src/components/ui/button.tsx", "description": "Shadcn button component with variants", "library": "shadcn/ui", "baseLibrary": "@radix-ui/react-slot", "variants": ["default", "destructive", "outline", "secondary", "ghost", "link"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'card-tsx',
  'UIComponent',
  'Card',
  json('{"filePath": "src/components/ui/card.tsx", "description": "Shadcn card component with subcomponents", "library": "shadcn/ui", "subcomponents": ["CardHeader", "CardTitle", "CardContent", "CardFooter", "CardDescription"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'separator-tsx',
  'UIComponent',
  'Separator',
  json('{"filePath": "src/components/ui/separator.tsx", "description": "Shadcn separator component", "library": "shadcn/ui", "baseLibrary": "@radix-ui/react-separator"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'scroll-area-tsx',
  'UIComponent',
  'ScrollArea',
  json('{"filePath": "src/components/ui/scroll-area.tsx", "description": "Shadcn scroll area component", "library": "shadcn/ui", "baseLibrary": "@radix-ui/react-scroll-area"}')
);

-- ============================================================================
-- CONTENT ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'content-types-ts',
  'TYPE_DEFINITION',
  'ContentTypes',
  json('{"filePath": "src/content/types.ts", "description": "TypeScript type definitions for portfolio content including Project, WorkHistory, and CaseStudyContent", "types": ["Project", "WorkHistoryEntry", "WorkHistory", "CaseStudyContent"], "exports": ["Project", "WorkHistoryEntry", "WorkHistory", "CaseStudyContent"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'projects-ts',
  'DATA_SOURCE',
  'projects',
  json('{"filePath": "src/content/projects.ts", "description": "Project data for DocuSearch, tkr-context-kit, and TaskBoardAI", "contentType": "project-data", "count": 3, "projects": ["docusearch", "context-kit", "kanban"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'work-history-ts',
  'DATA_SOURCE',
  'workHistory',
  json('{"filePath": "src/content/work-history.ts", "description": "Work history content with career narrative", "contentType": "work-history", "companies": ["Shaw Communications", "Worldplay Networks", "Nutrien"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'docusearch-case-study-ts',
  'DATA_SOURCE',
  'docusearchCaseStudy',
  json('{"filePath": "src/content/case-studies/docusearch.ts", "description": "DocuSearch case study content following Problem→Understanding→Solution→Impact framework", "contentType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "docusearch"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'context-kit-case-study-ts',
  'DATA_SOURCE',
  'contextKitCaseStudy',
  json('{"filePath": "src/content/case-studies/context-kit.ts", "description": "tkr-context-kit case study content following Problem→Understanding→Solution→Impact framework", "contentType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "context-kit"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'kanban-case-study-ts',
  'DATA_SOURCE',
  'kanbanCaseStudy',
  json('{"filePath": "src/content/case-studies/kanban.ts", "description": "TaskBoardAI case study content following Problem→Understanding→Solution→Impact framework", "contentType": "case-study", "pattern": "Problem→Understanding→Solution→Impact", "project": "kanban"}')
);

-- ============================================================================
-- UTILITY ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'utils-ts',
  'UTILITY',
  'utils',
  json('{"filePath": "src/lib/utils.ts", "description": "Utility functions for className merging (cn)", "functions": ["cn"], "libraries": ["clsx", "tailwind-merge"]}')
);

-- ============================================================================
-- STYLING ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'tweakcn-css',
  'STYLE_SYSTEM',
  'tweakcn',
  json('{"filePath": "src/styles/tweakcn.css", "description": "Design system using OKLCH color space with comprehensive CSS custom properties for light and dark modes", "colorSpace": "OKLCH", "modes": ["light", "dark"], "tokens": ["background", "foreground", "card", "primary", "secondary", "muted", "accent", "destructive", "border", "input", "ring", "chart", "sidebar"], "fonts": {"sans": "Afacad", "serif": "Alice", "mono": "Courier Prime"}, "shadows": ["2xs", "xs", "sm", "md", "lg", "xl", "2xl"], "radius": "0.375rem"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'index-css',
  'STYLE_SYSTEM',
  'index',
  json('{"filePath": "src/index.css", "description": "Main CSS entry point importing Tailwind and tweakcn", "imports": ["tailwindcss", "tweakcn"]}')
);

-- ============================================================================
-- ARCHITECTURAL PATTERN ENTITIES
-- ============================================================================

INSERT INTO entities (id, type, name, data)
VALUES (
  'pattern-case-study-framework',
  'PATTERN',
  'Problem→Understanding→Solution→Impact Framework',
  json('{"filePath": "portfolio-wide", "description": "Architectural pattern for case study presentation used across all three projects", "phases": ["Problem", "Understanding", "Solution", "Impact"], "components": ["ProblemSection", "UnderstandingSection", "SolutionSection", "ImpactSection", "ProjectMetadata"], "usage": ["DocuSearch", "ContextKit", "Kanban"]}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'pattern-dual-api',
  'PATTERN',
  'Dual API Pattern',
  json('{"filePath": "src/components/case-studies/CaseStudyLayout.tsx", "description": "Design pattern supporting both content prop and children prop APIs for flexibility", "apis": ["content-prop", "children-prop"], "benefit": "backward-compatibility and composition flexibility"}')
);

INSERT INTO entities (id, type, name, data)
VALUES (
  'pattern-responsive-grid',
  'PATTERN',
  'Responsive Hero Grid',
  json('{"filePath": "src/components/sections/FeaturedProjects.tsx", "description": "Layout pattern with hero item spanning 2 columns on desktop, stacking on mobile", "layout": "grid", "hero": "lg:col-span-2", "responsive": true}')
);

-- ============================================================================
-- DEPENDENCY RELATIONSHIPS
-- ============================================================================

-- main.tsx dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-main-app',
  'main-tsx',
  'app-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "main.tsx imports and renders App component"}')
);

-- App.tsx dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-app-theme-provider',
  'app-tsx',
  'theme-provider-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "App wraps application in ThemeProvider"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-app-home',
  'app-tsx',
  'home-page-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "route": "/", "description": "App routes to Home page"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-app-docusearch',
  'app-tsx',
  'docusearch-page-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "route": "/docusearch", "description": "App routes to Docusearch page"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-app-context-kit',
  'app-tsx',
  'context-kit-page-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "route": "/context-kit", "description": "App routes to ContextKit page"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-app-kanban',
  'app-tsx',
  'kanban-page-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "route": "/kanban", "description": "App routes to Kanban page"}')
);

-- Home page dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-home-hero',
  'home-page-tsx',
  'hero-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "Home page imports Hero section"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-home-about',
  'home-page-tsx',
  'about-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "Home page imports About section"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-home-featured-projects',
  'home-page-tsx',
  'featured-projects-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Home page imports FeaturedProjects section"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-home-separator',
  'home-page-tsx',
  'separator-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Home page imports Separator UI component"}')
);

-- Header dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-header-theme-toggle',
  'header-tsx',
  'theme-toggle-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Header imports ThemeToggle component"}')
);

-- About section dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-about-work-history',
  'about-tsx',
  'work-history-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "About section imports work history content"}')
);

-- FeaturedProjects dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-featured-projects-projects',
  'featured-projects-tsx',
  'projects-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "FeaturedProjects imports projects data"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-featured-projects-project-card',
  'featured-projects-tsx',
  'project-card-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "FeaturedProjects imports ProjectCard component"}')
);

-- Docusearch page dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-docusearch-case-study-data',
  'docusearch-page-tsx',
  'docusearch-case-study-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Docusearch page imports case study content"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-docusearch-card',
  'docusearch-page-tsx',
  'card-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Docusearch page imports Card components"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-docusearch-separator',
  'docusearch-page-tsx',
  'separator-tsx',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Docusearch page imports Separator component"}')
);

-- CaseStudyLayout dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-content-types',
  'case-study-layout-tsx',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "CaseStudyLayout imports CaseStudyContent type"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-problem',
  'case-study-layout-tsx',
  'problem-section-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "CaseStudyLayout imports ProblemSection"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-understanding',
  'case-study-layout-tsx',
  'understanding-section-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "CaseStudyLayout imports UnderstandingSection"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-solution',
  'case-study-layout-tsx',
  'solution-section-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "CaseStudyLayout imports SolutionSection"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-impact',
  'case-study-layout-tsx',
  'impact-section-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "CaseStudyLayout imports ImpactSection"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-case-study-layout-metadata',
  'case-study-layout-tsx',
  'project-metadata-tsx',
  'DEPENDS_ON',
  json('{"importType": "default", "description": "CaseStudyLayout imports ProjectMetadata"}')
);

-- UI component dependencies
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-button-utils',
  'button-tsx',
  'utils-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Button imports cn utility"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-card-utils',
  'card-tsx',
  'utils-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "Card imports cn utility"}')
);

-- Pattern relationships
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-case-study-layout',
  'case-study-layout-tsx',
  'pattern-case-study-framework',
  'IMPLEMENTS',
  json('{"implementation": "component-composition", "description": "CaseStudyLayout implements Problem→Understanding→Solution→Impact framework"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-docusearch',
  'docusearch-page-tsx',
  'pattern-case-study-framework',
  'IMPLEMENTS',
  json('{"implementation": "content-structure", "description": "Docusearch page implements Problem→Understanding→Solution→Impact framework"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-context-kit',
  'context-kit-page-tsx',
  'pattern-case-study-framework',
  'IMPLEMENTS',
  json('{"implementation": "content-structure", "description": "ContextKit page implements Problem→Understanding→Solution→Impact framework"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-kanban',
  'kanban-page-tsx',
  'pattern-case-study-framework',
  'IMPLEMENTS',
  json('{"implementation": "content-structure", "description": "Kanban page implements Problem→Understanding→Solution→Impact framework"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-dual-api-case-study',
  'case-study-layout-tsx',
  'pattern-dual-api',
  'IMPLEMENTS',
  json('{"implementation": "component-props", "description": "CaseStudyLayout implements dual API pattern"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-pattern-responsive-grid-featured',
  'featured-projects-tsx',
  'pattern-responsive-grid',
  'IMPLEMENTS',
  json('{"implementation": "tailwind-grid", "description": "FeaturedProjects implements responsive hero grid pattern"}')
);

-- Data flow relationships
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-projects-types',
  'projects-ts',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "projects.ts uses Project type definition"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-work-history-types',
  'work-history-ts',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "work-history.ts uses WorkHistory type definition"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-docusearch-case-types',
  'docusearch-case-study-ts',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "docusearch case study uses CaseStudyContent type"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-context-kit-case-types',
  'context-kit-case-study-ts',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "context-kit case study uses CaseStudyContent type"}')
);

INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-kanban-case-types',
  'kanban-case-study-ts',
  'content-types-ts',
  'DEPENDS_ON',
  json('{"importType": "named", "description": "kanban case study uses CaseStudyContent type"}')
);

-- Style system relationships
INSERT INTO relations (id, from_id, to_id, type, properties)
VALUES (
  'rel-index-css-tweakcn',
  'index-css',
  'tweakcn-css',
  'DEPENDS_ON',
  json('{"importType": "css", "description": "index.css imports tweakcn design system"}')
);
